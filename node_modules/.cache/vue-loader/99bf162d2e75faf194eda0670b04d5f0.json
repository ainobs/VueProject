{"remainingRequest":"C:\\Users\\Aienobe\\Desktop\\dev (1)\\ShineGoTest\\shinegotest\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\Aienobe\\Desktop\\dev (1)\\ShineGoTest\\shinegotest\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\Aienobe\\Desktop\\dev (1)\\ShineGoTest\\shinegotest\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Aienobe\\Desktop\\dev (1)\\ShineGoTest\\shinegotest\\src\\components\\FormCard.vue?vue&type=template&id=9613ffb8&scoped=true&","dependencies":[{"path":"C:\\Users\\Aienobe\\Desktop\\dev (1)\\ShineGoTest\\shinegotest\\src\\components\\FormCard.vue","mtime":1647332115469},{"path":"C:\\Users\\Aienobe\\Desktop\\dev (1)\\ShineGoTest\\shinegotest\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1647213415948},{"path":"C:\\Users\\Aienobe\\Desktop\\dev (1)\\ShineGoTest\\shinegotest\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1647213560688},{"path":"C:\\Users\\Aienobe\\Desktop\\dev (1)\\ShineGoTest\\shinegotest\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1647213415948},{"path":"C:\\Users\\Aienobe\\Desktop\\dev (1)\\ShineGoTest\\shinegotest\\node_modules\\vue-loader\\lib\\index.js","mtime":1647213528864}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}